ВАРИАНТ 22

Авторы новой энциклопедии организовали названия заголовков в таком порядке, который они считают наиболее приемлемым для своих читателей. Это не лексикографическое упорядочение слов, а список слов с отступами вправо путем добавления необходимого числа лидирующих пробелов перед заголовками. Такую структуру они назвали словарем.

Словарь представляет собой список слов с некоторым числом пробелов перед определенными словами. Формат словаря может быть описан как набор ограничений на группы последовательных слов, начинающихся с одной и той же буквы. Любая максимальная последовательность слов, начинающихся с одной и той же буквы, должна удовлетворять следующим правилам:
1.	Первое слово в группе не имеет лидирующих пробелов. Каждое последующее слово в группе имеет, по крайней мере, один лидирующий пробел.
2.	Если
	a)	удалить первое слово в группе и
	b)	удалить по одному лидирующему пробелу в каждом последующем слове группы и
	c)	удалить первую букву в каждом последующем слове группы,
то полученная последовательность слов останется словарем.

Написать программу, которая преобразует исходный список слов в словарь, добавляя некоторое число пробелов перед определенными словами и сохраняя исходный порядок слов.

Формат входных данных

Во входном потоке данных записано от одного до 100000 слов, по одному слову в строке. Длина слова не превышает 10 строчных букв английского алфавита. Лидирующих и хвостовых пробелов в словах нет. Пустых строк между словами нет, но в конце файла может быть произвольное число пустых строк.

Формат выходных данных

Порядок слов в выходном потоке данных должен соответствовать порядку слов во входном потоке данных. Хвостовых пробелов в словах по-прежнему не должно быть, но в начале слов может быть записано необходимое число пробелов, чтобы этот список образовывал словарь. Пустых строк между словами не должно быть, но в конце файла может быть произвольное число пустых строк.

Пример входных данных

а
ant
antique
amaze
bargain
bridge
bride
bribe
born
bucket
tart
tan
tram
trolley
t
try
trial
zed
double
dorm
do
dormant
donate
again
agony
boost
back
born

Пример выходных данных

а
.ant
..antique
.amaze
bargain
.bridge
..bride
...bribe
.born
.bucket
tart
.tan
.tram
..trolley
.t
.try
..trial
zed
double
.dorm
..do
..dormant
..donate
again
.agony
boost
.back
.born

Замечание. Для удобства чтения пробелы заменены символом “.”. В выходном потоке точки должны быть заменены пробелами.